To run the project:

1. cd project folder
2. npm install
3. ./node_modules/.bin/rn-nodeify --hack --install
4. npm start
5. Open ./ios/iotaWallet.xcodeproj in Xcode
6. Select iPhone 7 Plus Simulator in Xcode
7. Run

If you test the project, or want to give feedback, then it would be great if you could fill this out this form afterwards:

-------------------------------

Tested by:

Suggestions for code improvement:
Suggestions for security:
Other comments:

Bugs/problems encountered

Issue:
How to reproduce:
Suggested Solution:

Issue:
How to reproduce:
Suggested Solution:

-------------------------------

Feel free to critique whatever you like. I appreciate any feedback, so thank you in advance for taking the time. 
Bear in mind that this is a project for my MSc CS conversion master’s thesis.

It’s worth trying the wallet with a seed that has some previous transactions/balance. 
Feel free to test out TUIUIQVBSJVRFLDKQWTRYCFHRLDQFWUDWSXFOHZJTSTFJCV9VXXXLOS9XEKRNATUXKCFWOTDROCANIYDE

I suggest running the app on the iPhone 7 Plus simulator in Xcode (this has the correct chart scaling). 
I haven’t tested the app in Android for a while. I’m getting an error `undefined is not a function (evaluating ‘Uint32Array.from’)`. 
I don’t have time to work out what’s going on here (need to get on with writing the thesis itself), so if you have any ideas please let me know.

-------------------------------

Need suggestions on what to do here:

When setting up your seed (either generating a new seed, or entering an existing seed), the seed is stored temporarily in Redux store. 
It is cleared from the store and added to keychain/keystore on setting a password. Do you any suggestions on a more secure approach? 
Storing in keychain could work if users set up a password before their seed.

-------------------------------

Useful things to know:

Multiple seeds can be stored in the keychain, each with its own password.

Click on the currency/timeframe above the chart to cycle through options. 

Click the balance to reveal full balance.

-------------------------------

Incomplete/yet to implement:

Major Features:

• Transaction sending & PoW
• 2FA
• Widget modularisation in tools page
• AttachToTangle for initial address generation
• App mode for technical content abstraction (minimal, standard and expert modes)
• Onboarding UI overhaul
• Checksums
• QR scanning
• Paper wallet generation
• Copy seed to clipboard
• Deterministic seed generation: https://laurencetennant.com/iota-tools/seed.html

Minor details:

• Text input restrictions (e.g. [A-Z9]+ for seed input)
• onEnterKey text input submit
• Various scaling problems on iPads
• Catching invalid API data
• Loading spinner for address generation

-------------------------------

Known Issues:

Password security - The user’s password is currently stored in plain text throughout the session. 
This allows the seed to be obtained from the keystore/keychain when needed. 
This will be replaced by a hash of the password, with that hash used instead of the password in the key-value pair.

Block colour to gradient rendering delay on screen push - This is an issue with Wix’s React-Native-Navigation. I’ll probably swap to different navigation library
https://github.com/wix/react-native-navigation/issues/358

Delays in chart rendering - Instead of making individual API calls, data will be stored on app load and refreshed on a timer.

Chart scaling problems - The chart isn’t scaling properly across devices. I suspect it’s to do with the view box.